{
	// Place your lndboss workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"lndboss": {
		"scope": "",
		"prefix": "lndboss",
		"body": [
			"import { CssBaseline, Stack, TextField } from '@mui/material';",
			"import React, { useState } from 'react';",
			"import commands from '../commands';",
			"import StandardButtonLink from '../standard_components/StandardButtonLink';",
			"import StartFlexBox from '../standard_components/StartFlexBox';",
			"import SubmitButton from '../standard_components/SubmitButton';",
			"import * as types from '../types';",
			"import Head from 'next/head';",
			
			"const ${1:commandName} = commands.find(n => n.value === '${2:commandName}');",
			
			"const styles = {form: {marginLeft: '50px',marginTop: '100px',width: '300px',},};",
			
			"const ${3:fileName} = () => {",
				"const fetchData = async () => {",
					"const flags: types.${4:commandName} = {};",
			
					"const { error, result } = await window.electronAPI.${5:commandName}(flags);",
			
					"if (!!error) {window.alert(error);return;}",
			
					"if (!!result) {}};",
				"return (<CssBaseline><Head><title>${6:pageName}</title></Head><StartFlexBox><StandardButtonLink label='Home' destination='/Commands' /><Stack spacing={3} style={styles.form}><TextField type=''text placeholder={}label={} id={} onChange={} /><SubmitButton variant='contained' onClick={fetchData}>Run Command</SubmitButton></Stack></StartFlexBox></CssBaseline>);};",
			
			"export default ${3:fileName};",
		],
		"description": "Run lndboss"
	}
}